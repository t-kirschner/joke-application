name: Build and Test Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and run Unit Tests and Integration Tests (Backend)
        run: mvn test

      - name: Run Unit Tests (Frontend)
        run: |
          cd ./src/main/Frontend/joke-application-vue-frontend/src
          npm install
          npm run test

      - name: Static Code Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=t-kirschner_joke-application -Dsonar.branch.name=master

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: "master"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Start Application
        run: mvn spring-boot:run --file pom.xml &

      - name: Wait for application to start
        run: sleep 20s

      - name: Start Frontend Application
        run: |
          cd ./src/main/Frontend/joke-application-vue-frontend
          npm install
          npm run dev &

      - name: Wait for Frontend application to start
        run: sleep 10s

      - name: Install k6
        run: |
          sudo gpg -k
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6

      - name: Run k6 Load Test
        run: k6 run ./src/test/performance/LoadTest.js

    # Stress Test optional because of high testing time
    # - name: Run k6 Stress Test
    #   run: k6 run ./src/test/performance/StressTest.js

      - name: Run Cypress End-to-End Test
        run: |
          cd ./src/main/Frontend/joke-application-vue-frontend
          npx cypress run